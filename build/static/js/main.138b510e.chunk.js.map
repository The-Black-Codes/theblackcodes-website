{"version":3,"sources":["assets/images/BlackCodes.png","routes.js","components/NavBar.js","components/Loader.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","routes","path","exact","name","component","React","lazy","NavBarComponent","props","useState","isOpen","setIsOpen","Navbar","className","dark","expand","NavbarBrand","href","src","logo","alt","NavbarToggler","onClick","right","Collapse","navbar","Nav","map","route","index","NavItem","key","NavLink","Loader","FooterComponent","size","icon","faFacebook","faTwitter","faLinkedin","faInstagram","faGithub","App","fallback","from","to","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.138b510e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BlackCodes.e7fb447a.png\";","import React from 'react';\n// import $ from 'jquery';\n\n// window.jQuery = $;\n// window.$ = $;\n// global.jQuery = $;\n\nconst Home = React.lazy(() => import('./pages/Home'));\nconst Contact = React.lazy(() => import('./pages/Contact'));\nconst About = React.lazy(() => import('./pages/About'));\nconst Events = React.lazy(() => import('./pages/Events'));\n\nconst routes = [\n  { path: '/home', exact: true, name: 'Home', component: Home },\n  { path: '/contact', exact: true, name: 'Contact', component: Contact },\n  { path: '/about', exact: true, name: 'About', component: About },\n  { path: '/events', exact: true, name: 'Events', component: Events }\n];\n\nexport default routes;","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport '../App.scss';\nimport logo from '../assets/images/BlackCodes.png';\nimport routes from '../routes';\n\nconst NavBarComponent = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar className=\"navigation\" dark expand=\"md\">\n        <NavbarBrand href=\"/\"><img src={logo} alt=\"Black Codes Logo\"/></NavbarBrand>\n        <NavbarToggler onClick={toggle} right />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {\n              routes.map((route, index) => {\n                return (\n                  <NavItem key={index}>\n                    <NavLink href={route.path}>{route.name}</NavLink>\n                  </NavItem>\n                )\n              })\n            }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBarComponent;","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {faInstagram, faTwitter, faFacebook, faLinkedin, faGithub} from '@fortawesome/free-brands-svg-icons'\n// import {faInstagram, faTwitter, faFacebook} from '@fortawesome/free-solid-svg-icons'\n\nconst footerStyle = {\n  background: '#999',\n  height: '100px'\n}\n\nconst FooterComponent = (props) => {\n    return (\n      <footer className=\"page-footer font-small cyan darken-3\">\n\n      {/* Footer Elements */}\n      <div className=\"container\">\n        {/* Grid row */}\n        <div className=\"row\">\n          {/* Grid column */}\n          <div className=\"col-md-12 py-2\">\n            <div className=\"mt-4 text-center\">\n              <h3 className=\"mb-5\">About The Black.Codes</h3>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Turpis nunc eget lorem dolor. Aliquet risus feugiat in ante metus dictum at tempor commodo. Tempus quam pellentesque nec nam aliquam sem et tortor consequat. Eget est lorem ipsum dolor sit amet consectetur.\n              </p>\n            </div>\n          </div>  \n          {/* Grid column */}\n    \n          {/* Grid column */}\n          <div className=\"col-md-12 py-5\">\n            <div className=\"mb-5 text-center\">\n              <h3 className=\"mb-5\">Follow Us</h3>\n              {/* Facebook */}\n              <a href=\"https://www.facebook.com/theblackcodes01/\" className=\"fb-ic\">\n                <FontAwesomeIcon className='mx-3' size='6x' icon={faFacebook} />\n              </a>\n              {/* Twitter */}\n              <a className=\"tw-ic\">\n              <FontAwesomeIcon className='mx-3' size='6x' icon={faTwitter} />\n              </a>\n              {/* Linkedin */}\n              <a className=\"li-ic\">\n              <FontAwesomeIcon className='mx-3' size='6x' icon={faLinkedin} />\n              </a>\n              {/* Instagram */}\n              <a className=\"ins-ic\">\n              <FontAwesomeIcon className='mx-3' size='6x' icon={faInstagram} />\n              </a>\n              {/* Github */}\n              <a>\n              <FontAwesomeIcon className='mx-3' size='6x' icon={faGithub} />\n              </a>\n            </div>\n          </div>\n          {/* Grid column */}\n        </div>\n        {/* Grid row */}\n      </div>\n       {/* Footer Elements */}\n    \n      {/* <!-- Copyright --> */}\n      <div className=\"footer-copyright text-center py-3\">Â© 2020 Copyright:\n        <a href=\"https://mdbootstrap.com/\"> The Black.Codes.com</a>\n      </div>\n      {/* <!-- Copyright --> */}\n    \n    </footer>\n    // <!-- Footer -->\n    );\n  };\n  \n  export default FooterComponent;","import React, { Suspense } from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Navbar from \"./components/NavBar\";\nimport Loader from './components/Loader';\nimport FooterComponent from './components/Footer';\n\nimport routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Suspense fallback={Loader}>\n          <Switch>\n            {\n              routes.map((route, index) => <Route key={index} path={route.path} component={route.component} />)\n            }\n            <Redirect from=\"*\" to=\"/home\" />\n          </Switch>\n        </Suspense>\n        <FooterComponent />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n      <App />\n    {/* </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}